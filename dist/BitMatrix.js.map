{"version":3,"file":"BitMatrix.js","sources":["../src/BitMatrix.ts"],"sourcesContent":["import { Point } from \"./Point\";\n\nexport class BitMatrix {\n  public static createEmpty(width: number, height: number) {\n    const mat = new BitMatrix(width, height);\n    mat.data = new Uint8ClampedArray(Math.ceil((width * height) / 8));\n    mat.data.fill(0);\n    return mat;\n  }\n\n  public static createFromBinarization(data: Uint8ClampedArray, width: number) {\n    const mat = new BitMatrix(width, data.length / width);\n    mat.data = new Uint8ClampedArray(Math.ceil((width * mat.height) / 8));\n    mat.data.fill(0);\n    for (let k = 0; k < data.length; k++) {\n      const i = Math.floor(k / 8);\n      const j = k % 8;\n\n      if (data[k]) mat.data[i] |= 1 << j;\n    }\n    return mat;\n  }\n\n  public static createFromPacked(\n    dataPacked: Uint8ClampedArray,\n    width: number,\n    height: number,\n  ) {\n    const mat = new BitMatrix(width, height);\n    mat.data = new Uint8ClampedArray(dataPacked);\n    return mat;\n  }\n\n  public width: number;\n  public height: number;\n  public data: Uint8ClampedArray;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  private coordsToPackedIndices(x: number, y: number) {\n    const i = y * this.width + x;\n    return [Math.floor(i / 8), i % 8];\n  }\n\n  public get(x: number, y: number): boolean {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return false;\n    }\n    const [i, j] = this.coordsToPackedIndices(x, y);\n    return !!((this.data[i] >> j) & 1);\n  }\n\n  public set(x: number, y: number, v: boolean) {\n    const [i, j] = this.coordsToPackedIndices(x, y);\n\n    if (v) {\n      this.data[i] |= 1 << j;\n    } else {\n      this.data[i] &= ~(1 << j);\n    }\n  }\n\n  public setRegion(\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n    v: boolean,\n  ) {\n    for (let y = top; y < top + height; y++) {\n      for (let x = left; x < left + width; x++) {\n        this.set(x, y, !!v);\n      }\n    }\n  }\n\n  public mirror() {\n    for (let x = 0; x < this.width; x++) {\n      for (let y = x + 1; y < this.height; y++) {\n        if (this.get(x, y) !== this.get(y, x)) {\n          this.set(x, y, !this.get(x, y));\n          this.set(y, x, !this.get(y, x));\n        }\n      }\n    }\n  }\n\n  public equals(matrix: BitMatrix) {\n    const m = (this.width * this.height) % 8;\n    let i;\n    for (i = 0; i < this.data.length - (m > 0 ? 1 : 0); i++) {\n      if (this.data[i] !== matrix.data[i]) {\n        return false;\n      }\n    }\n    for (let j = 0; j < m; j++) {\n      if (((this.data[i] >> j) & 1) ^ ((matrix.data[i] >> j) & 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"],"names":[],"mappings":"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"}